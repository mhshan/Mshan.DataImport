// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SvcBase.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from SvcBase.proto</summary>
public static partial class SvcBaseReflection {

  #region Descriptor
  /// <summary>File descriptor for SvcBase.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SvcBaseReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1TdmNCYXNlLnByb3RvImgKD1JlcXVlc3RNZXRhRGF0YRIoCgRkYXRhGAEg",
          "AygLMhouUmVxdWVzdE1ldGFEYXRhLkRhdGFFbnRyeRorCglEYXRhRW50cnkS",
          "CwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJqChBSZXNwb25zZU1l",
          "dGFEYXRhEikKBGRhdGEYASADKAsyGy5SZXNwb25zZU1ldGFEYXRhLkRhdGFF",
          "bnRyeRorCglEYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJ",
          "OgI4ASLJAQoSUmVxdWVzdFNlbmRNZXNzYWdlEhAKCGRldmljZUlkGAEgASgJ",
          "EhMKC3NlcnZpY2VQYXRoGAIgASgJEhUKDXNlcnZpY2VNZXRob2QYAyABKAkS",
          "MwoITWV0YURhdGEYBCADKAsyIS5SZXF1ZXN0U2VuZE1lc3NhZ2UuTWV0YURh",
          "dGFFbnRyeRIPCgdwYXlsb2FkGAUgASgMGi8KDU1ldGFEYXRhRW50cnkSCwoD",
          "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASIHCgVFbXB0eSIaCglCb29s",
          "VmFsdWUSDQoFdmFsdWUYASABKAgqQQoMUmVzcG9uc2VDb2RlEgYKAk9LEAAS",
          "EAoMVE9CRUNPTlRJTlVFEAESCgoGTk9EQVRBEAISCwoHSU5WQUxJRBADQjUK",
          "HmNvbS5uZXdjYXBlYy5odC5wcm90by5Qcm90b1N2Y0IHU3ZjQmFzZVoKLjtQ",
          "cm90b1N2Y2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ResponseCode), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RequestMetaData), global::RequestMetaData.Parser, new[]{ "Data" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResponseMetaData), global::ResponseMetaData.Parser, new[]{ "Data" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::RequestSendMessage), global::RequestSendMessage.Parser, new[]{ "DeviceId", "ServicePath", "ServiceMethod", "MetaData", "Payload" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::Empty), global::Empty.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BoolValue), global::BoolValue.Parser, new[]{ "Value" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ResponseCode {
  [pbr::OriginalName("OK")] Ok = 0,
  [pbr::OriginalName("TOBECONTINUE")] Tobecontinue = 1,
  [pbr::OriginalName("NODATA")] Nodata = 2,
  [pbr::OriginalName("INVALID")] Invalid = 3,
}

#endregion

#region Messages
public sealed partial class RequestMetaData : pb::IMessage<RequestMetaData> {
  private static readonly pb::MessageParser<RequestMetaData> _parser = new pb::MessageParser<RequestMetaData>(() => new RequestMetaData());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RequestMetaData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SvcBaseReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestMetaData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestMetaData(RequestMetaData other) : this() {
    data_ = other.data_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestMetaData Clone() {
    return new RequestMetaData(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private static readonly pbc::MapField<string, string>.Codec _map_data_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
  private readonly pbc::MapField<string, string> data_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> Data {
    get { return data_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RequestMetaData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RequestMetaData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!Data.Equals(other.Data)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= Data.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    data_.WriteTo(output, _map_data_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += data_.CalculateSize(_map_data_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RequestMetaData other) {
    if (other == null) {
      return;
    }
    data_.Add(other.data_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          data_.AddEntriesFrom(input, _map_data_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ResponseMetaData : pb::IMessage<ResponseMetaData> {
  private static readonly pb::MessageParser<ResponseMetaData> _parser = new pb::MessageParser<ResponseMetaData>(() => new ResponseMetaData());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResponseMetaData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SvcBaseReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseMetaData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseMetaData(ResponseMetaData other) : this() {
    data_ = other.data_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseMetaData Clone() {
    return new ResponseMetaData(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private static readonly pbc::MapField<string, string>.Codec _map_data_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
  private readonly pbc::MapField<string, string> data_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> Data {
    get { return data_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResponseMetaData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResponseMetaData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!Data.Equals(other.Data)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= Data.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    data_.WriteTo(output, _map_data_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += data_.CalculateSize(_map_data_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResponseMetaData other) {
    if (other == null) {
      return;
    }
    data_.Add(other.data_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          data_.AddEntriesFrom(input, _map_data_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class RequestSendMessage : pb::IMessage<RequestSendMessage> {
  private static readonly pb::MessageParser<RequestSendMessage> _parser = new pb::MessageParser<RequestSendMessage>(() => new RequestSendMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RequestSendMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SvcBaseReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestSendMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestSendMessage(RequestSendMessage other) : this() {
    deviceId_ = other.deviceId_;
    servicePath_ = other.servicePath_;
    serviceMethod_ = other.serviceMethod_;
    metaData_ = other.metaData_.Clone();
    payload_ = other.payload_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestSendMessage Clone() {
    return new RequestSendMessage(this);
  }

  /// <summary>Field number for the "deviceId" field.</summary>
  public const int DeviceIdFieldNumber = 1;
  private string deviceId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DeviceId {
    get { return deviceId_; }
    set {
      deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "servicePath" field.</summary>
  public const int ServicePathFieldNumber = 2;
  private string servicePath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServicePath {
    get { return servicePath_; }
    set {
      servicePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "serviceMethod" field.</summary>
  public const int ServiceMethodFieldNumber = 3;
  private string serviceMethod_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ServiceMethod {
    get { return serviceMethod_; }
    set {
      serviceMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "MetaData" field.</summary>
  public const int MetaDataFieldNumber = 4;
  private static readonly pbc::MapField<string, string>.Codec _map_metaData_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
  private readonly pbc::MapField<string, string> metaData_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> MetaData {
    get { return metaData_; }
  }

  /// <summary>Field number for the "payload" field.</summary>
  public const int PayloadFieldNumber = 5;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Payload {
    get { return payload_; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RequestSendMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RequestSendMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DeviceId != other.DeviceId) return false;
    if (ServicePath != other.ServicePath) return false;
    if (ServiceMethod != other.ServiceMethod) return false;
    if (!MetaData.Equals(other.MetaData)) return false;
    if (Payload != other.Payload) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
    if (ServicePath.Length != 0) hash ^= ServicePath.GetHashCode();
    if (ServiceMethod.Length != 0) hash ^= ServiceMethod.GetHashCode();
    hash ^= MetaData.GetHashCode();
    if (Payload.Length != 0) hash ^= Payload.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DeviceId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DeviceId);
    }
    if (ServicePath.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ServicePath);
    }
    if (ServiceMethod.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ServiceMethod);
    }
    metaData_.WriteTo(output, _map_metaData_codec);
    if (Payload.Length != 0) {
      output.WriteRawTag(42);
      output.WriteBytes(Payload);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DeviceId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
    }
    if (ServicePath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePath);
    }
    if (ServiceMethod.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceMethod);
    }
    size += metaData_.CalculateSize(_map_metaData_codec);
    if (Payload.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RequestSendMessage other) {
    if (other == null) {
      return;
    }
    if (other.DeviceId.Length != 0) {
      DeviceId = other.DeviceId;
    }
    if (other.ServicePath.Length != 0) {
      ServicePath = other.ServicePath;
    }
    if (other.ServiceMethod.Length != 0) {
      ServiceMethod = other.ServiceMethod;
    }
    metaData_.Add(other.metaData_);
    if (other.Payload.Length != 0) {
      Payload = other.Payload;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          DeviceId = input.ReadString();
          break;
        }
        case 18: {
          ServicePath = input.ReadString();
          break;
        }
        case 26: {
          ServiceMethod = input.ReadString();
          break;
        }
        case 34: {
          metaData_.AddEntriesFrom(input, _map_metaData_codec);
          break;
        }
        case 42: {
          Payload = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class Empty : pb::IMessage<Empty> {
  private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Empty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SvcBaseReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty(Empty other) : this() {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Empty Clone() {
    return new Empty(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Empty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Empty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Empty other) {
    if (other == null) {
      return;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
      }
    }
  }

}

public sealed partial class BoolValue : pb::IMessage<BoolValue> {
  private static readonly pb::MessageParser<BoolValue> _parser = new pb::MessageParser<BoolValue>(() => new BoolValue());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BoolValue> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SvcBaseReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BoolValue() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BoolValue(BoolValue other) : this() {
    value_ = other.value_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BoolValue Clone() {
    return new BoolValue(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private bool value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BoolValue);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BoolValue other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != false) hash ^= Value.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Value != false) {
      output.WriteRawTag(8);
      output.WriteBool(Value);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != false) {
      size += 1 + 1;
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BoolValue other) {
    if (other == null) {
      return;
    }
    if (other.Value != false) {
      Value = other.Value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 8: {
          Value = input.ReadBool();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
